version: '3.8'

services:
  app:
    container_name: app
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8079:8079"
    environment:
      APP_HOST: "app"
      APP_PORT: "8079"
      DB_URL: "postgresql://root@cockroachdb1:26257/defaultdb?sslmode=disable"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://app:8079/health" ]
      interval: 3s
      timeout: 3s
      retries: 3
    depends_on:
      kafka:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully

  client:
    container_name: client
    build:
      context: .
      dockerfile: Dockerfile-client
    environment:
      APP_HOST: "app"
      APP_PORT: "8079"
      SPAM_TIMEOUT_MS: "3000"
    depends_on:
      - app

  cockroachdb1:
    container_name: cockroachdb1
    hostname: cockroachdb1
    image: cockroachdb/cockroach:v21.1.16
    command: start --insecure --join=cockroachdb1:26257,cockroachdb2:26258 --store=node1 --advertise-addr=cockroachdb1:26257 --http-addr=cockroachdb1:8080
    ports:
      - "26257:26257"
      - "8080:8080"
    healthcheck:
      test: [ "CMD-SHELL", "cockroach node ls --insecure" ]
      interval: 5s
      timeout: 5s
      retries: 3

  cockroachdb2:
    container_name: cockroachdb2
    hostname: cockroachdb2
    image: cockroachdb/cockroach:v21.1.16
    command: start --insecure --join=cockroachdb1:26257,cockroachdb2:26258 --store=node2 --advertise-addr=cockroachdb2:26258 --http-addr=cockroachdb2:8081
    ports:
      - "26258:26257"
      - "8081:8080"
    healthcheck:
      test: [ "CMD-SHELL", "cockroach node ls --insecure" ]
      interval: 5s
      timeout: 5s
      retries: 3

  migrate:
    container_name: migrate
    image: migrate/migrate
    volumes:
      - ./repo/pg/migrations:/migrations
    command: [ "-path", "/migrations", "-database",  "cockroachdb://root@cockroachdb1:26257/defaultdb?sslmode=disable", "up" ]
    depends_on:
      - cockroachdb1

  zookeeper:
    image: confluentinc/cp-zookeeper:5.3.0
    container_name: 'zookeeper'
    hostname: 'zookeeper'
    restart: always
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SASL_ENABLED: "FALSE"

  kafka:
    image: confluentinc/cp-kafka:5.3.0
    container_name: 'kafka'
    hostname: 'kafka'
    restart: always
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    healthcheck:
      test: kafka-topics --bootstrap-server kafka:9092 --list
      interval: 30s
      timeout: 10s
      retries: 3
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      CONFLUENT_METRICS_ENABLE: 'false'